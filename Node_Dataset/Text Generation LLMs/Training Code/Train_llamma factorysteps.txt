# Training commands
# Before you start, you need to create Token on Hugging Face, and signup for LLaMA models 1B,3B and 8B

mkdir -p ~/miniconda3
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
rm ~/miniconda3/miniconda.sh

miniconda3/bin/conda init
source ~/.bashrc
conda create -n "llama_factory" python=3.10
conda activate llama_factory

git clone https://github.com/hiyouga/LLaMA-Factory.git
cd LLaMA-Factory/
pip install -e ".[torch,metrics]" --no-build-isolation
pip install absl-py ml_dtypes astunparse google_pasta keras opt_einsum wrapt 
pip install deepspeed==0.16.9
 
huggingface-cli login --token "Create Token that allows using llama models, signup"

llamafactory-cli train examples/train_full/llama3_full_sft.yaml


# Run The custom Logging Python code on new terminal 
python custom_loging.py

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
### llama3_full_sft.yaml to change the model size, and hyperparameters  
model_name_or_path: meta-llama/Meta-Llama-3-8B-Instruct
# model_name_or_path: meta-llama/Llama-3.2-3B-Instruct
#model_name_or_path: meta-llama/Llama-3.2-1B
trust_remote_code: true

### method
stage: sft
do_train: true
finetuning_type: full
deepspeed: examples/deepspeed/ds_z3_config.json  # choices: [ds_z1_config.json, ds_z2_config.json, ds_z3_config.json]

### dataset
dataset: identity,alpaca_en_demo
template: llama3
cutoff_len: 2048
max_samples: 1000
overwrite_cache: true
preprocessing_num_workers: 64
dataloader_num_workers: 64

### output
output_dir: saves/llama3-8b/full/sft
logging_steps: 10
save_steps: 500
plot_loss: true
overwrite_output_dir: true
save_only_model: false
report_to: none  # choices: [none, wandb, tensorboard, swanlab, mlflow]

### train
per_device_train_batch_size: 16
gradient_accumulation_steps: 2
learning_rate: 1.0e-5
num_train_epochs: 500
lr_scheduler_type: cosine
warmup_ratio: 0.1
bf16: true
ddp_timeout: 180000000
resume_from_checkpoint: null

### eval
# eval_dataset: alpaca_en_demo
# val_size: 0.1
# per_device_eval_batch_size: 1
# eval_strategy: steps
# eval_steps: 500

#########################################%% configuration Z1
{
  "train_batch_size": "auto",
  "train_micro_batch_size_per_gpu": "auto",
  "gradient_accumulation_steps": "auto",
  "gradient_clipping": "auto",
  "zero_allow_untested_optimizer": true,
  "fp16": {
    "enabled": "auto",
    "loss_scale": 0,
    "loss_scale_window": 1000,
    "initial_scale_power": 16,
    "hysteresis": 2,
    "min_loss_scale": 1
  },
  "bf16": {
    "enabled": "auto"
  },
  "zero_optimization": {
    "stage": 1,
    "reduce_scatter": true,
    "contiguous_gradients": true
  }
}

